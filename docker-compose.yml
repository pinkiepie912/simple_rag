services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    environment:
      - PORT=8000
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
    command: uvicorn src.server:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - es_n1
      - es_n2
      - redis
      - localstack
      - db
    networks:
      - local_net 

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker
    command: >
      watchmedo auto-restart
        --directory='.'
        --pattern='*.py'
        --recursive
        --
        celery -A src.celery_app worker -c 2 --loglevel=info --pool=gevent
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    depends_on:
      - es_n1
      - es_n2
      - redis
      - localstack
      - db
    networks:
      - local_net 
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M 
        reservations:
          cpus: '0.25'
          memory: 256M

  es_n1:
    build:
      context: .
      dockerfile: Dockerfile_es
    container_name: es_n1
    environment:
      - node.name=es_n1
      - cluster.name=es_cluster
      - discovery.seed_hosts=es_n1,es_n2
      - cluster.initial_master_nodes=es_n1,es_n2
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - ./infra/esdata_n1:/usr/share/elasticsearch/data
    networks:
      - local_net

  es_n2:
    build:
      context: .
      dockerfile: Dockerfile_es
    container_name: es_n2
    environment:
      - node.name=es_n2
      - cluster.name=es_cluster
      - discovery.seed_hosts=es_n1,es_n2
      - cluster.initial_master_nodes=es_n1,es_n2
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./infra/esdata_n2:/usr/share/elasticsearch/data
    networks:
      - local_net

  redis:
    image: redis:7.0.12
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - local_net 

  localstack:
    image: localstack/localstack:3.4.0
    container_name: localstack
    environment:
      - SERVICES=s3,lambda,iam,sts
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DEFAULT_REGION=ap-northeast-2
      - DEBUG=1
    ports:
      - "4566:4566"
    volumes:
      - ./lambda_handlers/index_doc/init-localstack.sh:/etc/localstack/init/ready.d/init-aws.sh
      - ./infra/localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./lambda_handlers/lambda.zip:/tmp/lambda.zip
    networks:
      - local_net

  db:
    image: mysql:8.0
    container_name: db 
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rag 
      MYSQL_DATABASE: rag 
    ports:
      - "3306:3306"
    volumes:
      - ./infra/mysql-data:/var/lib/mysql
    command:
      --default-authentication-plugin=mysql_native_password
    networks:
      - local_net 

networks:
  local_net:
    driver: bridge

